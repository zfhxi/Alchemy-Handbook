(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{301:function(a,t,s){"use strict";s.r(t);var e=s(10),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"cuda-cudnn安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cuda-cudnn安装"}},[a._v("#")]),a._v(" CUDA/cuDNN安装")]),a._v(" "),t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),t("p",[a._v("1）大多数情况下，用户会事先安装nvidia驱动。")]),a._v(" "),t("p",[a._v("Linux如果已经安装nvidia驱动，可输入"),t("code",[a._v("nvidia-smi")]),a._v("查看"),t("code",[a._v("driver api")]),a._v("的cuda版本。")]),a._v(" "),t("p",[a._v("而当你成功cuda后，输入"),t("code",[a._v("nvcc --version")]),a._v("得到的"),t("code",[a._v("runtime api")]),a._v("的cuda版本与"),t("code",[a._v("driver api")]),a._v("的cuda版本不一致。")]),a._v(" "),t("p",[a._v("windows下，右键→nvidia控制面板→帮助→系统信息→组件→NVCUDA64.DLL项的产品名称会显示"),t("code",[a._v("driver api")]),a._v("的cuda版本。")]),a._v(" "),t("p",[a._v("2）上面版本不一致，大概率是因为用户事先单独安装了nvidia驱动，而不是使用cuda包中集成的GPU Installer Driver。当然下面是先单独安装了nvidia驱动（因为有时有多cuda版本的需求，没必要使用集成驱动，也可以灵活处理），如何处理确实考验用户的敏捷了。")]),a._v(" "),t("blockquote",[t("p",[t("code",[a._v("driver api")]),a._v("的版本能向下兼容"),t("code",[a._v("runtime api")]),a._v("的版本，即nvidia-smi 显示的版本大于nvcc --version 的版本通常不会出现大问题。")])]),a._v(" "),t("p",[a._v("参考："),t("a",{attrs:{href:"https://www.jianshu.com/p/eb5335708f2a",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.jianshu.com/p/eb5335708f2a"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"版本对应表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#版本对应表"}},[a._v("#")]),a._v(" 版本对应表")]),a._v(" "),t("h3",{attrs:{id:"pytorch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pytorch"}},[a._v("#")]),a._v(" PyTorch")]),a._v(" "),t("p",[a._v("最新版本参考："),t("a",{attrs:{href:"https://pytorch.org/get-started/locally/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://pytorch.org/get-started/locally/"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("历史版本参考："),t("a",{attrs:{href:"https://pytorch.org/get-started/previous-versions/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://pytorch.org/get-started/previous-versions/"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"tensorflow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tensorflow"}},[a._v("#")]),a._v(" TensorFlow")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://tensorflow.google.cn/install/source#linux",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://tensorflow.google.cn/install/source#linux"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"cuda与cudnn版本对应"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cuda与cudnn版本对应"}},[a._v("#")]),a._v(" cuda与cudnn版本对应")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://developer.nvidia.com/rdp/cudnn-archive",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://developer.nvidia.com/rdp/cudnn-archive"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"archlinux下安装-限管理员"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#archlinux下安装-限管理员"}},[a._v("#")]),a._v(" ArchLinux下安装（限管理员）")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("这是不建议的方式，尽管ArchLinux的AUR仓库提供了很多深度学习、机器学习软件包，但是他们严重依赖某一cuda版本，不建议用AUR安装大多数的、深度学习相关的包。")]),a._v(" "),t("p",[a._v("以下在GTX 1660TI、RTX 3090下测试。")]),a._v(" "),t("p",[a._v("1）如果你能保证仓库中的最新版CUDA、cuDNN适合你的环境的话，直接执行：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("pacman "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-S")]),a._v(" nvidia-lts cuda cudnn\n")])])]),t("p",[a._v("然而通常并不能做这样的保证，所以需要自己下载对应的版本")]),a._v(" "),t("p",[a._v("2）你可以先在"),t("a",{attrs:{href:"https://archive.archlinux.org/packages/c/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://archive.archlinux.org/packages/c/"),t("OutboundLink")],1),a._v("或清华源"),t("a",{attrs:{href:"https://arch-archive.tuna.tsinghua.edu.cn/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://arch-archive.tuna.tsinghua.edu.cn/"),t("OutboundLink")],1),a._v("的community库中（推荐后者）找到合适的cuda、cudnn版本，下载pkg.tar.zst文件")]),a._v(" "),t("p",[a._v("[可选]然后拷贝文件到"),t("code",[a._v("/var/pacman/cache/pkg")]),a._v("目录，并cd到此")]),a._v(" "),t("p",[a._v("然后执行：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" pacman "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-U")]),a._v(" cuda-xxxx-x86_64.pkg.tar.zst\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" pacman "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-U")]),a._v(" cudnn-xxxx-x86_64.pkg.tar.zst\n")])])]),t("p",[a._v("如果你安装了最新的版本，也可以通过2）的操作配合"),t("a",{attrs:{href:"https://wiki.archlinux.org/title/Downgrading_packages_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)",target:"_blank",rel:"noopener noreferrer"}},[a._v("downgrade"),t("OutboundLink")],1),a._v("工具来降级。")]),a._v(" "),t("p",[a._v("最后为了防止管理员手抽筋执行了"),t("code",[a._v("sudo pacman -Syyu")]),a._v("导致升级cuda、cudnn，因此修改/etc/pacman.conf来忽略这些包的升级：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("IgnorePkg "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" cuda cudnn\n")])])])])]),a._v(" "),t("h2",{attrs:{id:"debian下安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#debian下安装"}},[a._v("#")]),a._v(" Debian下安装")]),a._v(" "),t("p",[a._v("驱动需要管理员身份安装，CUDA、cuDNN部分可由普通用户选择安装自己有权限的目录里（这适用于需要使用多cuda版本的场景）。")]),a._v(" "),t("p",[a._v("以下在TITAN RTX V下测试。")]),a._v(" "),t("h3",{attrs:{id:"安装nvidia驱动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装nvidia驱动"}},[a._v("#")]),a._v(" 安装NVIDIA驱动")]),a._v(" "),t("p",[a._v("由于各种原因，Debian10安装好后，我已将开源驱动给禁掉了。")]),a._v(" "),t("p",[a._v("注意事项：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("据说在以下步骤进行之前，你需要在bios里关闭secure boot，否则安装NVIDIA驱动时会报错；")]),a._v(" "),t("p",[t("code",[a._v("The target kernel has CONFIG_MODULE_SIG set, which means that it supports cryptographic signatures on kernel modules. On some systems, the kernel may refuse to load modules without a valid signature from a trusted key. This system also has UEFI Secure Boot enabled; many distributions enforce module signature verification on UEFFI systems when SecureBoot is enable. Would you like to sign NVIDIA kernel module?")])])]),a._v(" "),t("li",[t("p",[a._v("以下步骤都在tty下进行，所以建议关闭图形界面。")]),a._v(" "),t("p",[t("em",[t("strong",[a._v("方案1:关闭图形界面")])])]),a._v(" "),t("p",[a._v("参考："),t("a",{attrs:{href:"https://blog.51cto.com/u_15127583/4259155",target:"_blank",rel:"noopener noreferrer"}},[a._v("debian关闭图形界面_配置Debian系统不启用图形界面，只有命令行界面的方法_51CTO博客_debian 关闭图形界面"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("1.打开grup配置文件："),t("code",[a._v("sudo vi /etc/default/grub")])]),a._v(" "),t("p",[a._v("2.修改：将"),t("code",[a._v('GRUB_CMDLINE_LINUX=""')]),a._v(" 修改为："),t("code",[a._v('GRUB_CMDLINE_LINUX="text"')])]),a._v(" "),t("p",[a._v("3.更新grub："),t("code",[a._v("sudo update-grub")])]),a._v(" "),t("p",[a._v("4.更新系统服务管理器配置："),t("code",[a._v("sudo  systemctl set-default multi-user.target")])]),a._v(" "),t("p",[a._v("5.重启："),t("code",[a._v("sudo init 6")])]),a._v(" "),t("p",[t("em",[t("strong",[a._v("方案2:临时关闭X server")])])]),a._v(" "),t("p",[a._v("1.查看当前桌面管理器: "),t("code",[a._v("cat /etc/X11/default-display-manager")])]),a._v(" "),t("p",[a._v("2.停止服务: "),t("code",[a._v("sudo systemctl stop lightdm")])])])]),a._v(" "),t("p",[a._v("先禁用闭源驱动：")]),a._v(" "),t("p",[t("code",[a._v("sudo vi /etc/modprobe.d/black_nouveau.conf")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("blacklist nouveau\noptions nouveau "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("modeset")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n")])])]),t("p",[a._v("需要卸载已有的驱动：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" remove "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--purge")]),a._v(" nvidia*\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" remove "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--purge")]),a._v(" *nvidia*\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" autoremove\n")])])]),t("p",[a._v("然后更新内核：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" update-initramfs "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v("\n")])])]),t("p",[a._v("显卡是TITAN RTX，去官网下载对应驱动"),t("code",[a._v("NVIDIA-Linux-x86_64-460.84.run")])]),a._v(" "),t("p",[a._v("安装之前安装以下需要依赖的包：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" build-essential pkg-config "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 未测式不安装会不会出问题")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# (编译Sample时所需的依赖包) 以下命令我并未执行")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" freeglut3-dev libx11-dev libxmu-dev libxi-dev libgl1-mesa libgl1-mesa-dri libglu1-mesa libglu1-mesa-dev\n")])])]),t("p",[a._v("安装"),t("code",[a._v("linux-headers")]),a._v("：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("uname")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 返回4.19.xxx")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" linux-headers-4.19 "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 4.19根据uname -r")]),a._v("\n")])])]),t("p",[a._v("保证是在tty下进行：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x NVIDIA-Linux-x86_64-460.84.run\n./NVIDIA-Linux-x86_64-460.84.run\n")])])]),t("p",[a._v("基本上一直选YES就对了")]),a._v(" "),t("p",[a._v("然后执行如下来检测驱动是否装上：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("nvidia-smi\n")])])]),t("h3",{attrs:{id:"安装cuda"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装cuda"}},[a._v("#")]),a._v(" 安装CUDA")]),a._v(" "),t("blockquote",[t("p",[a._v("注：如果你作为普通用户安装，那么下面的安装目录就不要选/usr/local/cudaxxx了，并且去除命令中的sudo。")])]),a._v(" "),t("p",[a._v("官网"),t("a",{attrs:{href:"https://developer.nvidia.com/cuda-downloads",target:"_blank",rel:"noopener noreferrer"}},[a._v("CUDA最新版本"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("官网"),t("a",{attrs:{href:"https://developer.nvidia.com/cuda-toolkit-archive",target:"_blank",rel:"noopener noreferrer"}},[a._v("CUDA历史版本"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("查看architecture："),t("code",[a._v("uname -a")])]),a._v(" "),t("p",[a._v("查看distribution："),t("code",[a._v("lsb_release -a")])]),a._v(" "),t("p",[a._v("Installer Type 选择runfile(local)")]),a._v(" "),t("p",[a._v("下载cuda："),t("code",[a._v("cuda_10.2.89_440.33.01_linux.run")])]),a._v(" "),t("p",[a._v("执行：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" u+x cuda_10.2.89_440.33.01_linux.run\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v(" cuda_10.2.89_440.33.01_linux.run\n")])])]),t("ul",[t("li",[a._v("如果要自定义目录，你可能需要使用"),t("code",[a._v("--toolkitpath=/path")]),a._v("选项或者在下图的Options里选择；")]),a._v(" "),t("li",[a._v("如果出现gcc不兼容，加入"),t("code",[a._v("—override")]),a._v("选项（参考"),t("a",{attrs:{href:"https://blog.csdn.net/HaoZiHuang/article/details/109544443",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://blog.csdn.net/HaoZiHuang/article/details/109544443"),t("OutboundLink")],1),a._v("）")])]),a._v(" "),t("p",[a._v("选择如下（不覆盖驱动）：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.idzc.top/picgoimg/202108162355416.png",alt:"https://img.idzc.top/picgoimg/202108162355416.png"}})]),a._v(" "),t("p",[a._v("安装完后的信息：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("lzq@titan:~/Downloads$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v(" cuda_10.2.89_440.33.01_linux.run \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" Summary "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n\nDriver:   Not Selected\nToolkit:  Installed "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" /usr/local/cuda-10.2/\nSamples:  Installed "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" /home/lzq/, but missing recommended libraries\n\nPlease "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" sure that\n -   "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")]),a._v(" includes /usr/local/cuda-10.2/bin\n -   LD_LIBRARY_PATH includes /usr/local/cuda-10.2/lib64, or, "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" /usr/local/cuda-10.2/lib64 to /etc/ld.so.conf and run ldconfig as root\n\nTo uninstall the CUDA Toolkit, run cuda-uninstaller "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" /usr/local/cuda-10.2/bin\n\nPlease see CUDA_Installation_Guide_Linux.pdf "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" /usr/local/cuda-10.2/doc/pdf "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" detailed information on setting up CUDA.\n***WARNING: Incomplete installation"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" This installation did not "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" the CUDA Driver. A driver of version at least "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("440.00")]),a._v(" is required "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" CUDA "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10.2")]),a._v(" functionality to work.\nTo "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" the driver using this installer, run the following command, replacing "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("CudaInstaller"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" with the name of this run file:\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("CudaInstaller"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(".run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--silent")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--driver")]),a._v("\n\nLogfile is /var/log/cuda-installer.log\n")])])]),t("p",[a._v("然后修改.bashrc，注意替换路径")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CUDA_HOME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/usr/local/cuda-10.2\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("LD_LIBRARY_PATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CUDA_HOME")]),a._v("/lib64:"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$LD_LIBRARY_PATH")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CUDA_HOME")]),a._v("/bin:"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v("\n")])])]),t("p",[a._v("然后"),t("code",[a._v("source .bashrc")]),a._v("，再"),t("code",[a._v("nvcc -V")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("nvcc: NVIDIA "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("R"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" Cuda compiler driver\nCopyright "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2005")]),a._v("-2019 NVIDIA Corporation\nBuilt on Wed_Oct_23_19:24:38_PDT_2019\nCuda compilation tools, release "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10.2")]),a._v(", V10.2.89\n")])])]),t("p",[a._v("or")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v("  /usr/local/cuda/version.txt\n")])])]),t("h3",{attrs:{id:"安装cudnn"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装cudnn"}},[a._v("#")]),a._v(" 安装cuDNN")]),a._v(" "),t("p",[a._v("官网"),t("a",{attrs:{href:"https://developer.nvidia.com/rdp/cudnn-archive",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://developer.nvidia.com/rdp/cudnn-archive"),t("OutboundLink")],1),a._v("按版本对应下载"),t("code",[a._v("cudnn-10.2-linux-x64-v8.2.0.53.tgz")])]),a._v(" "),t("p",[a._v("解压"),t("code",[a._v("tar xzvf cudnn*.tgz")]),a._v("或"),t("code",[a._v("tar xvf cudnn*.tar.xz")]),a._v("后，执行（注意版本号对应）：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" cudnn-*-archive/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" include/cudnn*.h /usr/local/cuda/include \n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-P")]),a._v(" lib/libcudnn* /usr/local/cuda/lib64\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /usr/local/cuda"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-xx.x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" a+r include/cudnn*.h lib64/libcudnn*\n")])])]),t("p",[a._v("通过"),t("code",[a._v("cat /usr/local/cuda-10.2/include/cudnn.h | grep CUDNN_MAJOR -A 2")]),a._v("，确认是否安装成功（或者"),t("code",[a._v("cat /usr/local/cuda-10.2/include/cudnn_version.h")]),a._v("）")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.idzc.top/picgoimg/202108162356580.png",alt:"https://img.idzc.top/picgoimg/202108162356580.png"}})]),a._v(" "),t("h2",{attrs:{id:"windows下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#windows下"}},[a._v("#")]),a._v(" Windows下")]),a._v(" "),t("p",[a._v("以下在GTX 1050TI下测试。")]),a._v(" "),t("p",[a._v("1）官网"),t("a",{attrs:{href:"https://link.ailemon.net/?target=https://developer.nvidia.com/cuda-downloads",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://link.ailemon.net/?target=https://developer.nvidia.com/cuda-downloads"),t("OutboundLink")],1),a._v("(最新版本)or"),t("a",{attrs:{href:"https://link.ailemon.net/?target=https://developer.nvidia.com/cuda-toolkit-archive",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://link.ailemon.net/?target=https://developer.nvidia.com/cuda-toolkit-archive"),t("OutboundLink")],1),a._v("(历史版本)")]),a._v(" "),t("p",[a._v("下载cuda："),t("code",[a._v("cuda_11.1.1_456.81_win10.exe")])]),a._v(" "),t("p",[a._v("在"),t("a",{attrs:{href:"https://developer.nvidia.com/rdp/cudnn-archive",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://developer.nvidia.com/rdp/cudnn-archive"),t("OutboundLink")],1),a._v("下载cudnn："),t("code",[a._v("cudnn-11.1-windows-x64-v8.0.5.39.zip")])]),a._v(" "),t("p",[a._v("2）下载完后，先安装cuda，打开exe文件，基本上点点就完事儿，注意下面的选择（只选cuda）：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.idzc.top/picgoimg/202110031014907.png",alt:"https://img.idzc.top/picgoimg/202110031014907.png"}})]),a._v(" "),t("p",[a._v("NVIDIA GeForce Experience是游戏相关的驱动（不会没人还没装吧？）Other里好像是physx，Driver components是显示驱动，讲道理你如果事先安装了NVIDIA驱动，下面这3个都是已经安装了的，没必要又替换。")]),a._v(" "),t("p",[a._v("3）下面调整下安装路径（任意）：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.idzc.top/picgoimg/202110031021084.png",alt:"https://img.idzc.top/picgoimg/202110031021084.png"}})]),a._v(" "),t("p",[a._v("4）执行"),t("code",[a._v("nvcc --version")]),a._v("查看cuda是否安装成功。")]),a._v(" "),t("p",[a._v("5）解压缩cudnn-xxx.zip，将对应的bin、include、lib文件夹与cuda安装目录下的对应目录进行合并，理论上不会出现覆盖。")]),a._v(" "),t("p",[a._v("win+R 输入sysdm.cpl→高级→环境变量，来添加环境变量")]),a._v(" "),t("p",[a._v("系统变量的"),t("code",[a._v("CUDA_PATH")]),a._v("保证值为刚才的安装目录：如"),t("code",[a._v("D:\\02DevelopTools\\cuda11.1\\computing_toolkit")])]),a._v(" "),t("p",[a._v("然后Path里添加记录：")]),a._v(" "),t("p",[t("code",[a._v("%CUDA_PATH%\\bin")])]),a._v(" "),t("p",[t("code",[a._v("D:\\02DevelopTools\\cuda11.1\\computing_toolkit\\lib\\x64")])]),a._v(" "),t("h2",{attrs:{id:"测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[a._v("#")]),a._v(" 测试")]),a._v(" "),t("p",[a._v("假如你已经安装了pytorch或者tensorflow：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 检查是否可用，理应返回True、0")]),a._v("\npython "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'import torch;print(torch.cuda.is_available())'")]),a._v("\npython "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'import torch;print(torch.cuda.current_device())'")]),a._v("\npython "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'import tensorflow as tf;print(tf.test.is_gpu_available())'")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看当前环境的cuda、cudnn版本")]),a._v("\npython "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'import torch;print(torch.version.cuda)'")]),a._v("\npython "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'import torch;print(torch.backends.cudnn.version())'")]),a._v("\n")])])]),t("h2",{attrs:{id:"其他"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[a._v("#")]),a._v(" 其他")]),a._v(" "),t("p",[a._v("注：当我安装CUDA 11.1时，似乎直接通过pip install torch安装的torch并不能识别到cuda，因此参考了官方的"),t("a",{attrs:{href:"https://pytorch.org/get-started/locally/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://pytorch.org/get-started/locally/"),t("OutboundLink")],1),a._v(" ，去"),t("a",{attrs:{href:"https://download.pytorch.org/whl/torch_stable.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://download.pytorch.org/whl/torch_stable.html"),t("OutboundLink")],1),a._v(" 里下对应cu111/xxxx-cpxxx-xxx.whl文件来安装后（或者直接"),t("code",[a._v("pip3 install torch==1.9.1+cu111 torchvision==0.10.1+cu111 torchaudio===0.9.1 -f [https://download.pytorch.org/whl/torch_stable.html](https://download.pytorch.org/whl/torch_stable.html)")]),a._v("），就可以识别cuda。")]),a._v(" "),t("blockquote",[t("p",[a._v("如果使用PyCharm，可能需要按照以下条目复制粘贴到PyCharm的右上角→ Edit Configurations→Environment  variables里：")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 注意以下理应只需更改cuda的安装路径，以下是/usr/local/cuda-10.2，可以使用which nvcc查看安装的路径")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("LD_LIBRARY_PATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/usr/local/cuda-10.2/lib64:"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$LD_LIBRARY_PATH")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/usr/local/cuda-10.2/bin:"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v("\n")])])]),t("p",[a._v("参考：")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/zhouchen1998/article/details/107778087",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://blog.csdn.net/zhouchen1998/article/details/107778087"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://blog.ailemon.net/2020/07/27/windows-install-cuda-and-cudnn-environment/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://blog.ailemon.net/2020/07/27/windows-install-cuda-and-cudnn-environment/"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/29841665",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://zhuanlan.zhihu.com/p/29841665"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);